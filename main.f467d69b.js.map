{"version":3,"sources":["scripts/main.js"],"names":["activeRow","body","document","querySelector","tableHeader","employeeDataTable","sortEmployeeTableByColumn","columnNumber","columnTitle","direction","employeeInfo","Array","from","rows","sort","firstPerson","secondPerson","firstPersonData","cells","innerHTML","secondPersonData","localeCompare","parseSalaryStringToNumber","append","salaryString","slice","split","join","highlightSelectedRow","selectedRow","removeAttribute","classList","add","addEventListener","e","firstElementChild","children","forEach","button","target","getAttribute","cellIndex","innerText","setAttribute","parentNode","newEmployeeForm","createElement","className","selectBoxOptions","submitForm","newEmployeeInfo","rowForNewEmployee","personData","cellForPersonData","personDataText","createTextNode","appendChild","showNotification","notificationTitle","notificationMessage","notification","dataset","qa","insertAdjacentHTML","charAt","toUpperCase","reset","setTimeout","remove","preventDefault","nameInput","name","value","trim","positionInput","position","officeInput","office","ageInput","age","salaryInput","salary","length","toLocaleString","editableArea","editCell","selectedCell","temp","focus","onkeydown","key","blur","onblur","replaceWith","tagName"],"mappings":"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","file":"main.f467d69b.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst tableHeader = document.querySelector('thead');\nconst employeeDataTable = document.querySelector('tbody');\n\n// table sorting\n\ntableHeader.addEventListener('click', e => {\n  [...tableHeader.firstElementChild.children].forEach((button) => {\n    if (button !== e.target) {\n      button.removeAttribute('data-dir');\n    }\n  });\n\n  if (e.target.getAttribute('data-dir') === 'desc') {\n    sortEmployeeTableByColumn(e.target.cellIndex,\n      e.target.innerText, 'desc');\n\n    e.target.setAttribute('data-dir', 'asc');\n  } else {\n    sortEmployeeTableByColumn(e.target.cellIndex,\n      e.target.innerText, 'asc');\n\n    e.target.setAttribute('data-dir', 'desc');\n  }\n});\n\nfunction sortEmployeeTableByColumn(columnNumber, columnTitle, direction) {\n  const employeeInfo = Array.from(employeeDataTable.rows);\n\n  const compareEmployees = function(firstPerson, secondPerson) {\n    const firstPersonData = firstPerson.cells[columnNumber].innerHTML;\n    const secondPersonData = secondPerson.cells[columnNumber].innerHTML;\n\n    switch (columnTitle) {\n      case 'Name':\n      case 'Position':\n      case 'Office':\n        if (direction === 'asc') {\n          return firstPersonData.localeCompare(secondPersonData);\n        }\n\n        return secondPersonData.localeCompare(firstPersonData);\n\n      case 'Age':\n        if (direction === 'asc') {\n          return firstPersonData - secondPersonData;\n        }\n\n        return secondPersonData - firstPersonData;\n\n      case 'Salary':\n        if (direction === 'asc') {\n          return parseSalaryStringToNumber(firstPersonData)\n            - parseSalaryStringToNumber(secondPersonData);\n        }\n\n        return parseSalaryStringToNumber(secondPersonData)\n          - parseSalaryStringToNumber(firstPersonData);\n    }\n  };\n\n  employeeInfo.sort(compareEmployees);\n\n  employeeDataTable.append(...employeeInfo);\n}\n\nfunction parseSalaryStringToNumber(salaryString) {\n  return salaryString.slice(1).split(',').join('');\n}\n\n// highlight selected row\n\nlet activeRow;\n\nemployeeDataTable.addEventListener('click', e => {\n  const clickedRow = e.target.parentNode;\n\n  highlightSelectedRow(clickedRow);\n});\n\nfunction highlightSelectedRow(selectedRow) {\n  if (activeRow) {\n    activeRow.removeAttribute('class');\n  }\n  activeRow = selectedRow;\n  activeRow.classList.add('active');\n}\n\n// form for adding new employees\n\nconst newEmployeeForm = document.createElement('form');\n\nnewEmployeeForm.className = 'new-employee-form';\nbody.append(newEmployeeForm);\n\nconst selectBoxOptions = `\n  <option value=\"Tokyo\">\n    Tokyo\n  </option>\n\n  <option value=\"Singapore\">\n    Singapore\n  </option>\n\n  <option value=\"London\">\n    London\n  </option>\n\n  <option value=\"New York\">\n    New York\n  </option>\n\n  <option value=\"Edinburgh\">\n    Edinburgh\n  </option>\n\n  <option value=\"San Francisco\">\n    San Francisco\n  </option>`;\n\nnewEmployeeForm.innerHTML = `\n  <label>\n    Name:\n    <input name=\"name\" type=\"text\" data-qa=\"name\">\n  </label>\n\n  <label>\n    Position:\n    <input name=\"position\" type=\"text\" data-qa=\"position\">\n  </label>\n\n  <label>\n    Office:\n    <select name=\"office\" data-qa=\"office\">\n      ${selectBoxOptions}\n    </select>\n  </label>\n\n  <label>\n    Age:\n    <input name=\"age\" type=\"number\" data-qa=\"age\">\n  </label>\n\n  <label>\n    Salary:\n    <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n  </label>\n\n  <button type=\"submit\">\n    Save to table\n  </button>\n`;\n\nnewEmployeeForm.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const nameInput = (newEmployeeForm.name.value).trim();\n  const positionInput = (newEmployeeForm.position.value).trim();\n  const officeInput = newEmployeeForm.office.value;\n  const ageInput = newEmployeeForm.age.value;\n  const salaryInput = newEmployeeForm.salary.value;\n\n  if (nameInput.length < 4) {\n    showNotification('error', 'Please, provide a name with minimum 4 letters.');\n  } else if (positionInput === '') {\n    showNotification('error', 'Please, provide a position name.');\n  } else if (+ageInput < 18 || +ageInput > 90) {\n    showNotification('error', 'The age should be between 18 to 90.');\n  } else {\n    const newEmployeeInfo = [nameInput, positionInput, officeInput,\n      ageInput, `$${(+salaryInput).toLocaleString('en-US')}`];\n\n    submitForm(newEmployeeInfo);\n  }\n});\n\nfunction submitForm(newEmployeeInfo) {\n  const rowForNewEmployee = document.createElement('tr');\n\n  employeeDataTable.append(rowForNewEmployee);\n\n  newEmployeeInfo.forEach((personData) => {\n    const cellForPersonData = document.createElement('td');\n    const personDataText = document.createTextNode(personData);\n\n    cellForPersonData.appendChild(personDataText);\n    rowForNewEmployee.appendChild(cellForPersonData);\n  });\n\n  showNotification('success', 'New employee was added!');\n}\n\n// show notification\n\nfunction showNotification(notificationTitle, notificationMessage) {\n  const notification = document.createElement('div');\n\n  notification.dataset.qa = 'notification';\n  notification.classList.add('notification', notificationTitle);\n\n  notification.insertAdjacentHTML('beforeend', `\n    <h2 class=\"title title\">\n    ${notificationTitle.charAt(0).toUpperCase()\n      + notificationTitle.slice(1)}\n    </h2>\n\n    <p>\n    ${notificationMessage}\n    </p>\n  `);\n\n  body.append(notification);\n\n  if (notificationTitle === 'success') {\n    newEmployeeForm.reset();\n  }\n\n  setTimeout(() =>\n    notification.remove(), 3000);\n}\n\n// editing of table\n\nlet editableArea = null;\n\nemployeeDataTable.addEventListener('dblclick', e => {\n  if (e.target.tagName !== 'TD') {\n    return;\n  }\n\n  editCell(e.target);\n});\n\nfunction editCell(selectedCell) {\n  const temp = selectedCell.innerHTML;\n\n  switch (selectedCell.cellIndex) {\n    case 0:\n    case 1:\n      editableArea = document.createElement('input');\n      break;\n    case 2:\n      editableArea = document.createElement('select');\n\n      editableArea.innerHTML = selectBoxOptions;\n      break;\n    case 3:\n    case 4:\n      editableArea = document.createElement('input');\n      editableArea.setAttribute('type', 'number');\n      break;\n  }\n  editableArea.className = 'cell-input';\n  selectedCell.innerHTML = '';\n\n  selectedCell.appendChild(editableArea);\n  editableArea.focus();\n\n  editableArea.onkeydown = function(e) {\n    if (e.key === 'Enter') {\n      this.blur();\n    }\n  };\n\n  editableArea.onblur = function() {\n    if (editableArea.value.trim() === '') {\n      editableArea.replaceWith(temp);\n    } else if (selectedCell.cellIndex === 4) {\n      selectedCell.innerHTML\n        = `$${(+editableArea.value).toLocaleString('en-US')}`;\n    } else if (selectedCell.cellIndex === 3\n        && (+editableArea.value < 18\n        || +editableArea.value > 90)) {\n      editableArea.replaceWith(temp);\n      showNotification('error', 'The age should be between 18 to 90.');\n    } else {\n      selectedCell.innerHTML = editableArea.value;\n    }\n    editableArea.replaceWith(selectedCell);\n  };\n}\n"]}